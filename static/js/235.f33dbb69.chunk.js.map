{"version":3,"file":"static/js/235.f33dbb69.chunk.js","mappings":"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","sources":["common/hoc/WithAuthRedirect.tsx","layout/content/profile/backgroundImg/BackgroundImg.tsx","layout/content/profile/ProfileStatus/ProfileStatusFC.tsx","layout/content/profile/avaDescription/AvaDescription.tsx","layout/content/profile/myPosts/post/Post.tsx","layout/content/profile/myPosts/MyPosts.tsx","layout/content/profile/myPosts/MyPostsContainer.tsx","layout/content/profile/Profile.tsx","layout/content/profile/ProfileContainer.tsx"],"sourcesContent":["import React, {ComponentType} from 'react';\r\nimport {AppStateType} from \"../../redux/store-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = <T,>(Component: ComponentType<T>) => {\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if(!props.isAuth) return <Navigate to={'/login'}/>\r\n        return <Component {...restProps as T & {}}/>\r\n    }\r\n\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n};","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst BackgroundImg = () => {\r\n    return (\r\n        <StyledBg>\r\n            <img\r\n                src=\"https://rukminim2.flixcart.com/image/850/1000/poster/3/x/p/end-of-world-paper-poster-12-x18-with-4-acrylic-sticker-free-original-imaej3phxmrfz67q.jpeg?q=90\"\r\n                alt=\"\"/>\r\n        </StyledBg>\r\n    );\r\n};\r\n\r\nexport default BackgroundImg;\r\n\r\nconst StyledBg = styled.div`\r\n  \r\n  padding: 15px;\r\n\r\n  img {\r\n    width: 950px;\r\n    height: 300px;\r\n    display: block;\r\n    margin: 0 auto;\r\n  }\r\n`","import React, {ChangeEvent, FC, useState} from 'react';\r\n\r\ntype ProfileStatusProps = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusFC: FC<ProfileStatusProps> = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    const editModeOn = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const editModeOff = () => {\r\n        setEditMode(false)\r\n        setStatus(status)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode ? <div>\r\n                    <input onChange={onChange} value={status} onBlur={editModeOff}\r\n                           autoFocus={true} type=\"text\"/>\r\n                </div> :\r\n                <div onDoubleClick={editModeOn}>\r\n                    {status || \"--------\"}\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {ProfileType} from \"../../../../redux/profile-reducer\";\r\nimport avatarka from \"../../../../assets/img/avatarkaPost.png\";\r\nimport check from \"../../../../assets/img/check.png\";\r\nimport cross from \"../../../../assets/img/cross.png\";\r\nimport {Preloader} from \"../../../../common/components/Preloader/Preloader\";\r\nimport {ProfileStatusFC} from \"../ProfileStatus/ProfileStatusFC\";\r\n\r\n\r\ntype AvaDescriptionPropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst AvaDescription = ({profile, status, updateStatus}: AvaDescriptionPropsType) => {\r\n\r\n    if(!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <StyledAvaDescription>\r\n            <img src={profile.photos.large !== null ? profile.photos.large : avatarka} alt={'photo'}/>\r\n            <ProfileStatusFC updateStatus={updateStatus} status={status}/>\r\n            <div>Full name: {profile.fullName}</div>\r\n            <div>About me: {profile.aboutMe}</div>\r\n            <div>Job: {profile.lookingForAJob ? <img src={check} alt={'check'}/> : <img src={cross} alt={'cross'}/>}</div>\r\n        </StyledAvaDescription>\r\n    );\r\n};\r\n\r\nexport default AvaDescription;\r\n\r\nconst StyledAvaDescription = styled.div`\r\n\r\n`","import React, {FC} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {Avatar} from \"../../../../../common/components/Avatar/Avatar\";\r\nimport ava from '../../../../../assets/img/avatarkaPost.png'\r\n\r\n\r\ntype PostPropsType = {\r\n    post: string\r\n    likes: number\r\n}\r\n\r\nconst Post: FC<PostPropsType> = (\r\n    {\r\n        post,\r\n        likes\r\n    }\r\n) => {\r\n    return (\r\n        <StyledPost>\r\n            <Avatar img={ava}/>\r\n            {post}\r\n            <div>likes: {likes}</div>\r\n        </StyledPost>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n\r\nconst StyledPost = styled.div`\r\n  margin-bottom: 10px;\r\n  img{\r\n    width: 80px;\r\n    height: 30px;\r\n  }\r\n`","import React, {FC} from 'react';\r\nimport styled from \"styled-components\";\r\nimport Post from \"./post/Post\";\r\nimport {ProfilePageType} from \"../../../../redux/profile-reducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../common/utils/validators\";\r\nimport {FormControl} from \"../../../../common/components/FormsControls/FormsControls\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: (updateNewPost:string) => void\r\n    profilePageState: ProfilePageType\r\n}\r\n\r\ntype FormPost = {\r\n    updateNewPost: string\r\n}\r\n\r\nlet maxLength10 = maxLength(10)\r\n\r\nconst PostForm: React.FC<InjectedFormProps<FormPost>> = (props) => {\r\n    return <>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={FormControl} name={\"updateNewPost\"}\r\n                   tagName=\"textarea\"\r\n                   validate={[required, maxLength10]}\r\n                   placeholder={\"Post message\"}\r\n            />\r\n            <button style={{display: \"block\", float: \"right\"}}>Send</button>\r\n        </form>\r\n    </>\r\n}\r\n\r\nconst PostReduxForm = reduxForm<FormPost>({\r\n    form: 'post'\r\n})(PostForm)\r\n\r\nconst MyPosts: FC<MyPostsPropsType> = (props: MyPostsPropsType) => {\r\n\r\n    const posts = props.profilePageState.posts.map((p,i) => {\r\n        return <Post key={i} post={p.post} likes={p.likes}/>\r\n    })\r\n\r\n    const onHandleSubmit = ({updateNewPost}: FormPost) => {\r\n        props.addPost(updateNewPost)\r\n    }\r\n\r\n    return (\r\n        <StyledMyPosts>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <PostReduxForm onSubmit={onHandleSubmit}/>\r\n            </div>\r\n\r\n            {posts}\r\n\r\n        </StyledMyPosts>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n\r\nconst StyledMyPosts = styled.div`\r\n\r\n`","import  {addPostAC, ProfilePageType} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/store-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n// type MyPostsPropsType = {}\r\n\r\n// const MyPostsContainer: FC<MyPostsPropsType> = (props: MyPostsPropsType) => {\r\n//\r\n//     // const state = props.store.getState();\r\n//     // const addPost = () => {\r\n//     //     props.store.dispatch(addPostAC())\r\n//     // }\r\n//     //\r\n//     // const onPostChange = (text: string) => {\r\n//     //     props.store.dispatch(updateNewPostTextAC(text))\r\n//     // }\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 const state = store.getState();\r\n//\r\n//                 const addPost = () => {\r\n//                     store.dispatch(addPostAC())\r\n//                 }\r\n//\r\n//                 const onPostChange = (text: string) => {\r\n//                     store.dispatch(updateNewPostTextAC(text))\r\n//                 }\r\n//\r\n//                 return <MyPosts\r\n//                     updateNewPostText={onPostChange}\r\n//                     addPost={addPost}\r\n//                     posts={state.profilePage.posts}\r\n//                     newPostText={state.profilePage.newPostText}\r\n//                 />\r\n//             }}\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\ntype mapStateToPropsType = {\r\n    profilePageState: ProfilePageType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addPost: (updateNewPost:string) => void\r\n}\r\n\r\nfunction mapStateToProps(state: AppStateType): mapStateToPropsType {\r\n    return {\r\n        profilePageState: state.profilePage\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch: Dispatch): mapDispatchToPropsType {\r\n    return {\r\n        addPost: (updateNewPost: string) => dispatch(addPostAC(updateNewPost))\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer;","import React, {FC} from 'react';\r\nimport styled from \"styled-components\";\r\nimport BackgroundImg from \"./backgroundImg/BackgroundImg\";\r\nimport AvaDescription from \"./avaDescription/AvaDescription\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfilePropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst Profile: FC<ProfilePropsType> = ({profile, status, updateStatus}) => {\r\n\r\n    return (\r\n        <StyledProfile>\r\n            <BackgroundImg/>\r\n            <AvaDescription profile={profile} status={status} updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </StyledProfile>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n\r\nconst StyledProfile = styled.div`\r\n\r\n`","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileStatus, getUserProfile, ProfileType, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {AppStateType} from \"../../../redux/store-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../../common/hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype ProfileContainerPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getProfileStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    profile: ProfileType\r\n    status: string\r\n    userId: number | null\r\n}\r\n\r\nconst ProfileContainer = ({getUserProfile, profile, status, getProfileStatus, updateStatus, userId}: ProfileContainerPropsType) => {\r\n\r\n    let params = useParams()\r\n\r\n    useEffect(() => {\r\n        if (!params.userId) {\r\n            if(userId) {\r\n                getUserProfile(userId)\r\n                getProfileStatus(userId)\r\n            }\r\n        } else {\r\n            getUserProfile(+params.userId)\r\n            getProfileStatus(+params.userId)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return <Profile profile={profile} status={status} updateStatus={updateStatus}/>\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    userId: number | null\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getProfileStatus, updateStatus}),\r\n    WithAuthRedirect\r\n)(ProfileContainer)"],"names":["mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","connect","props","restProps","to","StyledBg","src","alt","styled","ProfileStatusFC","useState","editMode","setEditMode","status","setStatus","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","type","onDoubleClick","profile","StyledAvaDescription","photos","large","avatarka","fullName","aboutMe","lookingForAJob","check","cross","Preloader","post","likes","StyledPost","Avatar","img","ava","maxLength10","maxLength","PostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","FormControl","name","tagName","validate","required","placeholder","style","display","float","posts","profilePageState","map","p","i","StyledMyPosts","updateNewPost","addPost","profilePage","dispatch","addPostAC","MyPosts","StyledProfile","compose","userId","id","getUserProfile","getProfileStatus","params","useParams","useEffect"],"sourceRoot":""}