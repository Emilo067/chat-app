{"version":3,"file":"static/js/950.da62de82.chunk.js","mappings":"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","sources":["common/hooks/useAppSelector.ts","common/components/Paginator/Paginator.styles.ts","common/components/Paginator/Paginator.tsx","layout/content/Users/Users.tsx","redux/users-selectors.ts","redux/auth-selectors.ts","layout/content/Users/UsersContainer.tsx"],"sourcesContent":["import {TypedUseSelectorHook, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store-redux\";\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<AppStateType> = useSelector","import styled from \"styled-components\";\r\n\r\ntype SelectedPageProps = {\r\n    isSelected: boolean;\r\n};\r\n\r\nexport const SelectedPage = styled.span<SelectedPageProps>`\r\n  border: 1px solid black;\r\n  font-weight: ${({isSelected}) => (isSelected ? \"bold\" : \"normal\")};\r\n  color: ${({isSelected}) => (isSelected ? \"red\" : \"black\")};\r\n`;\r\n\r\n\r\nconst PaginatorWrapperStyle = styled.div`\r\ndisplay: flex;\r\ngap: 5px;\r\n`\r\n\r\nconst PagesWrapper = styled.div`\r\n    display: flex;\r\n  gap: 3px;\r\n`\r\n\r\n\r\nexport const S = {\r\n    SelectedPage,\r\n    PaginatorWrapperStyle,\r\n    PagesWrapper\r\n}","import React, {useState} from 'react';\r\nimport {useAppSelector} from \"../../hooks/useAppSelector\";\r\nimport {S} from './Paginator.styles'\r\n\r\n\r\ntype Props = {\r\n    onChangePage: (value: number) => void\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator = ({onChangePage, portionSize}: Props) => {\r\n    const totalUsersCount = useAppSelector<number>(state => state.users.totalUsersCount)\r\n    const pageSize = useAppSelector<number>(state => state.users.pageSize)\r\n    const currentPage = useAppSelector<number>(state => state.users.currentPage)\r\n\r\n\r\n    const initialPortionNumber = Math.ceil(currentPage / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(initialPortionNumber)\r\n    console.log(portionNumber)\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionsCount = Math.ceil(pagesCount / portionSize)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const clickLeftPortionNumbePageHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n\r\n    const clickRightPortionNumbePageHandler = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n    }\r\n\r\n    return (<S.PaginatorWrapperStyle>\r\n            {portionNumber > 1 && <button onClick={clickLeftPortionNumbePageHandler}>left</button>}\r\n            <S.PagesWrapper>\r\n                {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => <S.SelectedPage\r\n                    onClick={() => {\r\n                        onChangePage(p)\r\n                    }} isSelected={currentPage === p}>{p}</S.SelectedPage>)}\r\n            </S.PagesWrapper>\r\n            {portionsCount > portionNumber && <button onClick={clickRightPortionNumbePageHandler}>right</button>}\r\n        </S.PaginatorWrapperStyle>\r\n    );\r\n};\r\n\r\n\r\n","import React, {FC} from 'react';\r\nimport avatarka from \"../../../assets/img/avatarkaPost.png\";\r\nimport {UsersPageType} from \"../../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Paginator} from \"../../../common/components/Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    usersPage: UsersPageType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onChangePage: (page: number) => void\r\n    followInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Users: FC<UsersPropsType> = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator onChangePage={props.onChangePage} portionSize={10}/>\r\n            <div>\r\n                {props.usersPage.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                             <img style={{width: '150px', height: '150px', borderRadius: '70px'}}\r\n                                  src={u.photos.small !== null ? u.photos.small : avatarka} alt=\"\"/>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button\r\n                                disabled={props.followInProgress.some(us => us === u.id)}\r\n                                onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                    //props.followThunk(u.id)\r\n                                }\r\n                                }>Unfollow</button>\r\n                            : <button\r\n                                disabled={props.followInProgress.some(us => us === u.id)}\r\n                                onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }\r\n                                }>Follow</button>}\r\n                    </div>\r\n                    </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n","import {AppStateType} from \"./store-redux\";\r\n\r\nexport const getUsers = (state: AppStateType) => state.users.users\r\nexport const getPageSize = (state: AppStateType) => state.users.pageSize\r\nexport const getCurrentPage = (state: AppStateType) => state.users.currentPage\r\nexport const getTotalUsersCount = (state: AppStateType) => state.users.totalUsersCount\r\nexport const getFetch = (state: AppStateType) => state.users.fetch\r\nexport const getFollowInProgress = (state: AppStateType) => state.users.followInProgress","import {AppStateType} from \"./store-redux\";\r\n\r\nexport const getIsAuth = (state: AppStateType) => state.auth.isAuth","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store-redux\";\r\nimport {fetchUsers, follow, unfollow, UsersPageType} from \"../../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../../common/components/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFetch,\r\n    getFollowInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../../redux/users-selectors\";\r\nimport {getIsAuth} from \"../../../redux/auth-selectors\";\r\n\r\ntype UsersContainerType = {\r\n    usersPage: UsersPageType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    fetch: boolean\r\n    followInProgress: number[]\r\n    fetchUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    isAuth: boolean\r\n}\r\n\r\nclass UsersContainerComponent extends React.Component<UsersContainerType> {\r\n\r\n    componentWillMount() {\r\n        this.props.fetchUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onChangeHandler = (page: number) => {\r\n        this.props.fetchUsers(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.fetch ? <Preloader/> :\r\n                <Users isAuth={this.props.isAuth}\r\n                       usersPage={this.props.usersPage}\r\n                       currentPage={this.props.currentPage}\r\n                       pageSize={this.props.pageSize}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       onChangePage={this.onChangeHandler}\r\n                       followInProgress={this.props.followInProgress}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersPageType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    fetch: boolean\r\n    followInProgress: number[]\r\n    isAuth: boolean\r\n}\r\n\r\n// const mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n//     return {\r\n//         usersPage: state.users.users,\r\n//         pageSize: state.users.pageSize,\r\n//         currentPage: state.users.currentPage,\r\n//         totalUsersCount: state.users.totalUsersCount,\r\n//         fetch: state.users.fetch,\r\n//         followInProgress: state.users.followInProgress,\r\n//         isAuth: state.auth.isAuth\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        fetch: getFetch(state),\r\n        followInProgress: getFollowInProgress(state),\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        fetchUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainerComponent)"],"names":["useAppSelector","useSelector","S","SelectedPage","styled","isSelected","PaginatorWrapperStyle","PagesWrapper","Paginator","onChangePage","portionSize","totalUsersCount","state","users","pageSize","currentPage","initialPortionNumber","Math","ceil","useState","portionNumber","setPortionNumber","console","log","pagesCount","pages","i","push","portionsCount","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","Users","props","usersPage","u","to","id","style","width","height","borderRadius","src","photos","small","avatarka","alt","followed","disabled","followInProgress","some","us","unfollow","follow","name","status","getUsers","getPageSize","getCurrentPage","getTotalUsersCount","getFetch","fetch","getFollowInProgress","getIsAuth","auth","isAuth","UsersContainerComponent","onChangeHandler","page","fetchUsers","this","Preloader","React","compose","connect"],"sourceRoot":""}