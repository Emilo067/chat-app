{"version":3,"file":"static/js/946.b8de875d.chunk.js","mappings":"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","sources":["common/components/Paginator/Paginator.styles.ts","common/components/Paginator/Paginator.tsx","layout/content/Users/Users.tsx","layout/content/Users/model/selectors/getUsers/getUsers.ts","layout/content/Users/model/selectors/getPageSize/getPageSize.ts","layout/content/Users/model/selectors/getCurrentPage/getCurrentPage.ts","layout/content/Users/model/selectors/getTotalUsersCount/getTotalUsersCount.ts","layout/content/Users/model/selectors/getFetch/getFetch.ts","layout/content/Users/model/selectors/getFollowInProgress/getFollowInProgress.ts","layout/content/Users/UsersContainer.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\ntype SelectedPageProps = {\r\n    isSelected?: boolean;\r\n};\r\n\r\nexport const SelectedPage = styled.span<SelectedPageProps>`\r\n  position: relative;\r\n  padding: 20px 25px;\r\n  text-decoration: none;\r\n  color: ${props => props.isSelected ? '#13FF0C' : '#fff'};\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n`;\r\n\r\n\r\nconst PaginatorWrapperStyle = styled.div`\r\n  position: relative;\r\n  height: 60px;\r\n  background: rgba(255, 255, 255, 0.05);\r\n  box-shadow: 5px 5px 30px rgba(0, 0, 0, 0.3);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  backdrop-filter: blur(3px);\r\n  border-radius: 2px;\r\n`\r\n\r\nconst PagesWrapper = styled.div`\r\n  list-style-type: none;\r\n  display: inline-block;\r\n  \r\n \r\n`\r\n\r\n\r\nexport const S = {\r\n    SelectedPage,\r\n    PaginatorWrapperStyle,\r\n    PagesWrapper\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useAppSelector} from \"../../hooks/useAppSelector\";\r\nimport {S, SelectedPage} from './Paginator.styles'\r\n\r\n\r\ntype Props = {\r\n    onChangePage: (value: number) => void\r\n    portionSize: number\r\n}\r\n\r\nexport const Paginator = ({onChangePage, portionSize}: Props) => {\r\n    const totalUsersCount = useAppSelector<number>(state => state.users.totalUsersCount)\r\n    const pageSize = useAppSelector<number>(state => state.users.pageSize)\r\n    const currentPage = useAppSelector<number>(state => state.users.currentPage)\r\n\r\n\r\n    const initialPortionNumber = Math.ceil(currentPage / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(initialPortionNumber)\r\n    console.log(portionNumber)\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionsCount = Math.ceil(pagesCount / portionSize)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    const clickLeftPortionNumbePageHandler = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n\r\n    const clickRightPortionNumbePageHandler = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n    }\r\n\r\n    return (<S.PaginatorWrapperStyle>\r\n            {portionNumber > 1 && <SelectedPage onClick={clickLeftPortionNumbePageHandler}>Prev</SelectedPage>}\r\n            <S.PagesWrapper>\r\n                {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => <S.SelectedPage\r\n                    onClick={() => {\r\n                        onChangePage(p)\r\n                    }} isSelected={currentPage === p}>{p}</S.SelectedPage>)}\r\n            </S.PagesWrapper>\r\n            {portionsCount > portionNumber && <SelectedPage onClick={clickRightPortionNumbePageHandler}>Next</SelectedPage>}\r\n        </S.PaginatorWrapperStyle>\r\n    );\r\n};\r\n\r\n\r\n","import React, {FC} from 'react';\r\nimport avatarka from \"../../../assets/img/avatarkaPost.png\";\r\nimport {UsersPageType} from \"./model/reducer/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Paginator} from \"../../../common/components/Paginator/Paginator\";\r\n\r\ntype UsersPropsType = {\r\n    usersPage: UsersPageType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    onChangePage: (page: number) => void\r\n    followInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Users: FC<UsersPropsType> = (props: UsersPropsType) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n\r\n    let pages = []\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paginator onChangePage={props.onChangePage} portionSize={10}/>\r\n            <div>\r\n                {props.usersPage.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                             <img style={{width: '150px', height: '150px', borderRadius: '70px'}}\r\n                                  src={u.photos.small !== null ? u.photos.small : avatarka} alt=\"\"/>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button\r\n                                disabled={props.followInProgress.some(us => us === u.id)}\r\n                                onClick={() => {\r\n                                    props.unfollow(u.id)\r\n                                    //props.followThunk(u.id)\r\n                                }\r\n                                }>Unfollow</button>\r\n                            : <button\r\n                                disabled={props.followInProgress.some(us => us === u.id)}\r\n                                onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }\r\n                                }>Follow</button>}\r\n                    </div>\r\n                    </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)}\r\n            </div>\r\n            <Paginator onChangePage={props.onChangePage} portionSize={10}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n","import {AppStateType} from \"../../../../../../app/store/store-redux\";\r\n\r\n\r\nexport const getUsers = (state: AppStateType) => state.users.users\r\n","import {AppStateType} from \"../../../../../../app/store/store-redux\";\r\n\r\nexport const getPageSize = (state: AppStateType) => state.users.pageSize\r\n","import {AppStateType} from \"../../../../../../app/store/store-redux\";\r\n\r\nexport const getCurrentPage = (state: AppStateType) => state.users.currentPage\r\n","import {AppStateType} from \"../../../../../../app/store/store-redux\";\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => state.users.totalUsersCount\r\n","import {AppStateType} from \"../../../../../../app/store/store-redux\";\r\n\r\nexport const getFetch = (state: AppStateType) => state.users.fetch\r\n","import {AppStateType} from \"../../../../../../app/store/store-redux\";\r\n\r\nexport const getFollowInProgress = (state: AppStateType) => state.users.followInProgress\r\n","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../app/store/store-redux\";\r\nimport {fetchUsers, follow, unfollow, UsersPageType} from \"./model/reducer/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../../common/components/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {selectIsAuth} from \"../../../redux/auth-selectors\";\r\nimport {getUsers} from \"./model/selectors/getUsers/getUsers\";\r\nimport {getPageSize} from \"./model/selectors/getPageSize/getPageSize\";\r\nimport {getCurrentPage} from \"./model/selectors/getCurrentPage/getCurrentPage\";\r\nimport {getTotalUsersCount} from \"./model/selectors/getTotalUsersCount/getTotalUsersCount\";\r\nimport {getFetch} from \"./model/selectors/getFetch/getFetch\";\r\nimport {getFollowInProgress} from \"./model/selectors/getFollowInProgress/getFollowInProgress\";\r\n\r\ntype UsersContainerType = {\r\n    usersPage: UsersPageType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    fetch: boolean\r\n    followInProgress: number[]\r\n    fetchUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    isAuth: boolean\r\n}\r\n\r\nclass UsersContainerComponent extends React.Component<UsersContainerType> {\r\n\r\n    componentWillMount() {\r\n        this.props.fetchUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onChangeHandler = (page: number) => {\r\n        this.props.fetchUsers(page, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.fetch ? <Preloader/> :\r\n                <Users isAuth={this.props.isAuth}\r\n                       usersPage={this.props.usersPage}\r\n                       currentPage={this.props.currentPage}\r\n                       pageSize={this.props.pageSize}\r\n                       totalUsersCount={this.props.totalUsersCount}\r\n                       onChangePage={this.onChangeHandler}\r\n                       followInProgress={this.props.followInProgress}\r\n                       follow={this.props.follow}\r\n                       unfollow={this.props.unfollow}\r\n                />\r\n            }\r\n        </>\r\n    }\r\n}\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersPageType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    fetch: boolean\r\n    followInProgress: number[]\r\n    isAuth: boolean\r\n}\r\n\r\n// const mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n//     return {\r\n//         usersPage: state.users.users,\r\n//         pageSize: state.users.pageSize,\r\n//         currentPage: state.users.currentPage,\r\n//         totalUsersCount: state.users.totalUsersCount,\r\n//         fetch: state.users.fetch,\r\n//         followInProgress: state.users.followInProgress,\r\n//         isAuth: state.auth.isAuth\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        fetch: getFetch(state),\r\n        followInProgress: getFollowInProgress(state),\r\n        isAuth: selectIsAuth(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        fetchUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainerComponent)\r\n"],"names":["SelectedPage","styled","props","isSelected","PaginatorWrapperStyle","PagesWrapper","S","Paginator","onChangePage","portionSize","totalUsersCount","useAppSelector","state","users","pageSize","currentPage","initialPortionNumber","Math","ceil","useState","portionNumber","setPortionNumber","console","log","pagesCount","pages","i","push","portionsCount","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","Users","usersPage","u","to","id","style","width","height","borderRadius","src","photos","small","avatarka","alt","followed","disabled","followInProgress","some","us","unfollow","follow","name","status","getUsers","getPageSize","getCurrentPage","getTotalUsersCount","getFetch","fetch","getFollowInProgress","UsersContainerComponent","onChangeHandler","page","fetchUsers","this","Preloader","isAuth","React","compose","connect","selectIsAuth"],"sourceRoot":""}